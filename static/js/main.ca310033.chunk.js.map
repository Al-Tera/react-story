{"version":3,"sources":["components/Form.js","components/Passage_Core.js","components/Passage.js","components/Passages.js","App.js","reportWebVitals.js","index.js"],"names":["Form","passages","setPassages","fullscreen","className","style","opacity","onClick","e","preventDefault","id","Math","random","empty","selected","paletteSelected","color","color2","title","textarea","y_axis","x_axis","Passage_Core","passage","hidden","setHidden","setDarken","setFullscreen","useState","coretitle","setCoreTitle","coretextarea","setCoreTextarea","exit2","event","keyCode","map","item","onChange","target","value","defaultValue","type","autoComplete","placeholder","onKeyDown","tabIndex","name","cols","rows","Passage","onMouseDown","onDoubleClick","onMouseUp","substring","length","border","background","filter","alt","Passages","setCount","App","localData","localStorage","getItem","JSON","parse","darken","count","useEffect","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca310033.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Form.css\";\r\nconst Form = ({ passages, setPassages, fullscreen }) => {\r\n  const createPassage = (e) => {\r\n    e.preventDefault();\r\n    setPassages([\r\n      ...passages,\r\n      {\r\n        id: Math.random() * 1000,\r\n        empty: false,\r\n        selected: false,\r\n        paletteSelected: false,\r\n        color: \"bluify\",\r\n        color2: \"cyan\",\r\n        title: \"Untitled\",\r\n        textarea: \"Double click here to edit this\",\r\n        y_axis: 0,\r\n        x_axis: 0,\r\n      },\r\n    ]);\r\n  };\r\n  return (\r\n    <div className=\"App-header\" style={{ opacity: fullscreen ? \"0\" : \"1\" }}>\r\n      <button onClick={createPassage} id=\"passage_button\">\r\n        <span>Create Section</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, {useState} from \"react\";\nimport \"./Passage_Core.css\";\n\nfunction Passage_Core({passages,\n  setPassages,\n  passage,\n  hidden,\n  setHidden,\n  setDarken,\n  fullscreen,\n  setFullscreen, }) {\n\n  const [coretitle, setCoreTitle] = useState(passage.title);\n  const [coretextarea, setCoreTextarea] = useState(passage.textarea);\n    \n  function fullscreen_mode() {\n    setFullscreen(!fullscreen);\n  }\n  function exit2(event) {\n    var x = event.keyCode;\n    //If user press 'escape' while textareas are focused\n    if (x === 27) {\n      setHidden(true);\n      setDarken(false);\n      setFullscreen(false);\n      setPassages(\n        passages.map((item) => {\n          if (item.id === passage.id) {\n            return {\n              ...item,\n              title: coretitle,\n              textarea: coretextarea,\n              empty: coretitle === \"\" && coretextarea === \"\" ? true : false\n            };\n          }\n          return item;\n        })\n      );\n    }\n  }\n\n  function exit() {\n    setHidden(true);\n    setDarken(false);\n    setPassages(\n      passages.map((item) => {\n        if (item.id === passage.id) {\n          return {\n            ...item,\n            title: coretitle,\n            textarea: coretextarea,\n            empty: coretitle === \"\" && coretextarea === \"\" ? true : false\n          };\n        }\n        return item;\n      })\n    );\n  }\n  const titleHandler = (e) => {\n    setCoreTitle(e.target.value);\n  };\n  const textareaHandler = (e) => {\n    setCoreTextarea(e.target.value);\n  };\n\n  return (\n    <div\n      className={`Core_Container ${hidden ? \"hide\" : \"unhide\"} ${\n        fullscreen ? \"fullscreen\" : \"\"\n      }`}\n    >\n      <div\n        className={`Core_Header ${\n          fullscreen ? \"fullscreen_mode_header\" : \"\"\n        }`}\n      >\n        <input\n          onChange={titleHandler}\n          defaultValue={coretitle}\n          type=\"text\"\n          className={`core_title ${\n            fullscreen ? \"Fullscreen_Mode_title\" : \"\"\n          }`}\n          autoComplete=\"off\"\n          placeholder=\"Untitled Passage\"\n          onKeyDown={exit2}\n        />\n        <button\n          className={`coreButton Fullscreen ${\n            fullscreen ? \"Fullscreen_Mode_fullscreen\" : \"\"\n          }`}\n          onClick={fullscreen_mode}\n          tabIndex=\"-1\"\n        ></button>\n        <button\n          className={`coreButton Exit ${\n            fullscreen ? \"Fullscreen_Mode_exit\" : \"\"\n          }`}\n          onClick={exit}\n          tabIndex=\"-1\"\n        ></button>\n      </div>\n      <textarea\n        onChange={textareaHandler}\n        defaultValue={coretextarea}\n        name=\"\"\n        className={`core_textile ${fullscreen ? \"Fullscreen_Mode_textile\" : \"\"}`}\n        cols=\"30\"\n        rows=\"10\"\n        placeholder=\"Double click here to edit this\"\n        onKeyDown={exit2}\n      ></textarea>\n    </div>\n  );\n}\n\nexport default Passage_Core;\n","import React, { useState } from \"react\";\r\nimport \"./Passage.css\";\r\nimport \"./Passage_Core.css\";\r\nimport PassageCore from \"./Passage_Core\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nfunction Passage({\r\n  setDarken,\r\n  passages,\r\n  setPassages,\r\n  passage,\r\n  fullscreen,\r\n  setFullscreen,\r\n}) {\r\n  const [hidden, setHidden] = useState(true);\r\n  // const [title, setTitle] = useState(\"Untitled Section\");\r\n  // const [textile, setTextile] = useState(\"Double click here to edit this.\");\r\n  // const [topexceed, setTopExceed] = useState(false)\r\n  // const [leftexceed, setLeftExceed] = useState(false)\r\n  // const [rightexceed, setRightExceed] = useState(false)\r\n  // const [bottomexceed, setBottomExceed] = useState(false)\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"Top: \" + topexceed)\r\n  //   console.log(\"Left: \" + leftexceed)\r\n  //   console.log(\"Bottom: \" + bottomexceed)\r\n  //   console.log(\"Right: \" + rightexceed)\r\n  //   const pass = document.getElementById(passage.id+\"passage\")\r\n  //   if (topexceed === true) {\r\n  //     pass.style.top= \"500px\"\r\n      \r\n  //   }\r\n  // },[topexceed, leftexceed, rightexceed, bottomexceed, passage])\r\n\r\n  function openPassage() {\r\n    setHidden(false);\r\n    setDarken(true);\r\n    setPassages(\r\n      passages.map((item) => {\r\n        if (item.id === passage.id) {\r\n          return {\r\n            ...item,\r\n            selected: false,\r\n            paletteSelected: false,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n  function deletePassage() {\r\n    setPassages(passages.filter((e) => e.id !== passage.id));\r\n  }\r\n\r\n  function paletteOpen() {\r\n    setPassages(\r\n      passages.map((item) => {\r\n        if (item.id === passage.id) {\r\n          return {\r\n            ...item,\r\n            paletteSelected: !item.paletteSelected,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n\r\n  function redSelect() {\r\n    setPassages(\r\n      passages.map((item) => {\r\n        if (item.id === passage.id) {\r\n          return {\r\n            ...item,\r\n            color: \"redify\",\r\n            color2: \"red\",\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n  \r\n\r\n  function greenSelect() {\r\n    setPassages(\r\n      passages.map((item) => {\r\n        if (item.id === passage.id) {\r\n          return {\r\n            ...item,\r\n            color: \"greenify\",\r\n            color2: \"greenyellow\",\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n  function blueSelect() {\r\n    setPassages(\r\n      passages.map((item) => {\r\n        if (item.id === passage.id) {\r\n          return {\r\n            ...item,\r\n            color: \"bluify\",\r\n            color2: \"cyan\",\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n  function optionVisibility() {\r\n    setPassages(\r\n      passages.map((item) => {\r\n        if (item.id === passage.id) {\r\n          return {\r\n            ...item,\r\n            selected: true,\r\n          };\r\n        } else if (item.id !== passage.id) {\r\n          return {\r\n            ...item,\r\n            selected: false,\r\n            paletteSelected: false,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n\r\n  function mouseUpFunc(e) {\r\n    e.preventDefault();\r\n   \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <PassageCore  \r\n          passages={passages}\r\n          setPassages ={setPassages}\r\n          passage={passage}\r\n          hidden={hidden}\r\n          setHidden={setHidden}\r\n          setDarken={setDarken}\r\n          fullscreen={fullscreen}\r\n          setFullscreen={setFullscreen}\r\n      />\r\n      <Draggable>\r\n        <div id={passage.id+\"passage\"}\r\n          className={`passage ${passage.selected ? \"top\" : \"\"}`}\r\n          // style={{ position: \"absolute\", top: passage.y_axis + \"px\", left: passage.x_axis + \"px\"}}  \r\n        >\r\n          <div\r\n            id={passage.id}\r\n            className={`passage_index ${\r\n              passage.empty ? \"empty_mode\" : \"\"\r\n            } ${passage.color}`}\r\n            onMouseDown={optionVisibility}\r\n            onDoubleClick={openPassage}\r\n            onMouseUp={mouseUpFunc}\r\n          >\r\n            <h6 className=\"passage_text title\">{passage.title.substring(0, 17)}{passage.title.length > 17 ? \"...\" : \"\"}</h6>\r\n            <h6 className=\"passage_text textile\">{passage.textarea.substring(0, 69)}{passage.textarea.length > 69 ? \"...\" : \"\"}</h6>\r\n\r\n            <div className={`line  ${passage.empty ? \"visible\" : \"\"}`}\r\n              style={{ border: `2px solid ${passage.color2}` }}>\r\n              <div className=\"line_inner\">\r\n                <div style={{ background: `${passage.color2}` }}></div>\r\n                <div style={{ background: `${passage.color2}` }}></div>\r\n                <div style={{ background: `${passage.color2}` }}></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* PASSAGE OPTIONS */}\r\n          <div className=\"options_container\">\r\n            <div className={`options ${passage.selected ? \"visible\" : \"\"}`}>\r\n              <button\r\n                onClick={deletePassage}\r\n                className=\"delete_btn\"\r\n                alt=\"delete\"\r\n              ></button>\r\n              <button\r\n                onClick={paletteOpen}\r\n                className=\"palette_btn\"\r\n                alt=\"palette\"\r\n              ></button>\r\n            </div>\r\n            <div\r\n              className={`palette ${passage.paletteSelected ? \"visible\" : \"\"}`}\r\n            >\r\n              <div\r\n                className=\"red_pale palette_choice\"\r\n                onClick={redSelect}\r\n              ></div>\r\n              <div\r\n                className=\"green_pale palette_choice\"\r\n                onClick={greenSelect}\r\n              ></div>\r\n              <div\r\n                className=\"blue_pale palette_choice\"\r\n                onClick={blueSelect}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Draggable>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Passage;\r\n","import React from \"react\";\r\nimport Passage from \"./Passage\";\r\nfunction Passages({\r\n  passages,\r\n  setPassages,\r\n  setHidden,\r\n  setDarken,\r\n  setCount,\r\n  fullscreen,\r\n  setFullscreen,\r\n}) {\r\n  return (\r\n    <div className=\"passage__container\">\r\n      <div className=\"passage__list\">\r\n        {passages.map((passage) => (\r\n          <Passage\r\n            key={passage.id}\r\n            passages={passages}\r\n            setPassages={setPassages}\r\n            setHidden={setHidden}\r\n            setDarken={setDarken}\r\n            passage={passage}\r\n            fullscreen={fullscreen}\r\n            setFullscreen={setFullscreen}\r\n            setCount={setCount}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Passages;\r\n","import React, { useState, useEffect} from \"react\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport Passages from \"./components/Passages\";\n\nfunction App() {\n  const [passages, setPassages] = useState( () =>{\n    const localData = localStorage.getItem('passages');\n    return localData ? JSON.parse(localData) : [];\n  });\n  const [darken, setDarken] = useState(false);\n  const [count, setCount] = useState(0);\n  const [fullscreen, setFullscreen] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem('passages', JSON.stringify(passages))\n  }, [passages])  \n\n\n  return (\n    <RemoveScroll>\n      <div className=\"App\">\n        <div className={darken ? \"darken\" : \"\"}></div>\n        <Form\n          passages={passages}\n          setPassages={setPassages}\n          count={count}\n          setCount={setCount}\n          fullscreen={fullscreen}\n        />\n        <Passages\n          passages={passages}\n          setPassages={setPassages}\n          setDarken={setDarken}\n          setCount={setCount}\n          fullscreen={fullscreen}\n          setFullscreen={setFullscreen}\n        />\n      </div>\n    </RemoveScroll>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}