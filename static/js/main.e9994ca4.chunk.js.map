{"version":3,"sources":["components/Form.js","components/Passage_Core.js","components/Passage.js","components/Passages.js","App.js","reportWebVitals.js","index.js"],"names":["Form","passages","setPassages","fullscreen","className","style","opacity","onClick","e","preventDefault","id","Math","random","empty","selected","paletteSelected","Passage_Core","stateList","exit2","event","keyCode","setHidden","setDarken","propertyChange","setFullscreen","title","textile","map","item","passage","hidden","onChange","setTitle","target","value","length","type","autoComplete","placeholder","substring","onKeyDown","tabIndex","setTextile","name","cols","rows","Passage","useState","bgcolor","setBgcolor","bgcolor2","setBgcolor2","onMouseDown","onDoubleClick","border","background","filter","alt","Passages","setCount","App","darken","count","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9994ca4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Form.css\";\r\nconst Form = ({ passages, setPassages, fullscreen }) => {\r\n  const createPassage = (e) => {\r\n    e.preventDefault();\r\n    setPassages([\r\n      ...passages,\r\n      {\r\n        id: Math.random() * 1000,\r\n        empty: false,\r\n        selected: false,\r\n        paletteSelected: false,\r\n      },\r\n    ]);\r\n  };\r\n  return (\r\n    <div className=\"App-header\" style={{ opacity: fullscreen ? \"0\" : \"1\" }}>\r\n      <button onClick={createPassage} id=\"passage_button\">\r\n        <span>Create Section</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport \"./Passage_Core.css\";\n\nfunction Passage_Core({ stateList }) {\n  function fullscreen_mode() {\n    stateList.setFullscreen(!stateList.fullscreen);\n  }\n  function exit2(event) {\n    var x = event.keyCode;\n    if (x === 27) {\n      stateList.setHidden(true);\n      stateList.setDarken(false);\n      propertyChange();\n\n      stateList.setFullscreen(false);\n    }\n  }\n\n  function propertyChange() {\n    if (stateList.title === \"\" && stateList.textile === \"\") {\n      stateList.setPassages(\n        stateList.passages.map((item) => {\n          if (item.id === stateList.passage.id) {\n            return {\n              ...item,\n              empty: true,\n            };\n          }\n          return item;\n        })\n      );\n    } else {\n      stateList.setPassages(\n        stateList.passages.map((item) => {\n          if (item.id === stateList.passage.id) {\n            return {\n              ...item,\n              empty: false,\n            };\n          }\n          return item;\n        })\n      );\n    }\n  }\n\n  function exit() {\n    stateList.setHidden(true);\n    stateList.setDarken(false);\n    propertyChange();\n  }\n  const titleHandler = (e) => {\n    stateList.setTitle(e.target.value);\n    if (stateList.title.length <= 16) {\n    } else {\n    }\n  };\n  const textareaHandler = (e) => {\n    stateList.setTextile(e.target.value);\n    if (stateList.textile.length <= 55) {\n    } else {\n    }\n  };\n  return (\n    <div\n      className={`Core_Container ${stateList.hidden ? \"hide\" : \"unhide\"} ${\n        stateList.fullscreen ? \"fullscreen\" : \"\"\n      }`}\n    >\n      <div\n        className={`Core_Header ${\n          stateList.fullscreen ? \"fullscreen_mode_header\" : \"\"\n        }`}\n      >\n        <input\n          onChange={titleHandler}\n          type=\"text\"\n          className={`core_title ${\n            stateList.fullscreen ? \"Fullscreen_Mode_title\" : \"\"\n          }`}\n          autoComplete=\"off\"\n          placeholder={stateList.title.substring(0, 17)}\n          onKeyDown={exit2}\n        />\n        <button\n          className={`coreButton Fullscreen ${\n            stateList.fullscreen ? \"Fullscreen_Mode_fullscreen\" : \"\"\n          }`}\n          onClick={fullscreen_mode}\n          tabIndex=\"-1\"\n        ></button>\n        <button\n          className={`coreButton Exit ${\n            stateList.fullscreen ? \"Fullscreen_Mode_exit\" : \"\"\n          }`}\n          onClick={exit}\n          tabIndex=\"-1\"\n        ></button>\n      </div>\n      <textarea\n        onChange={textareaHandler}\n        name=\"\"\n        className={`core_textile ${\n          stateList.fullscreen ? \"Fullscreen_Mode_textile\" : \"\"\n        }`}\n        cols=\"30\"\n        rows=\"10\"\n        placeholder={stateList.textile.substring(0, 55)}\n        onKeyDown={exit2}\n      ></textarea>\n    </div>\n  );\n}\n\nexport default Passage_Core;\n","import React, { useState } from \"react\";\r\nimport \"./Passage.css\";\r\nimport \"./Passage_Core.css\";\r\nimport PassageCore from \"./Passage_Core\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nfunction Passage({\r\n  setDarken,\r\n  passages,\r\n  setPassages,\r\n  passage,\r\n  fullscreen,\r\n  setFullscreen,\r\n}) {\r\n  const [hidden, setHidden] = useState(true);\r\n  const [title, setTitle] = useState(\"Untitled Section\");\r\n  const [textile, setTextile] = useState(\"Double click here to edit this.\");\r\n\r\n  const [bgcolor, setBgcolor] = useState(\"bluify\");\r\n  const [bgcolor2, setBgcolor2] = useState(\"cyan\");\r\n  const stateList = {\r\n    title,\r\n    setTitle,\r\n    textile,\r\n    setTextile,\r\n    passages,\r\n    setPassages,\r\n    passage,\r\n    hidden,\r\n    setHidden,\r\n    setDarken,\r\n    fullscreen,\r\n    setFullscreen,\r\n  };\r\n\r\n  function openPassage() {\r\n    setHidden(false);\r\n    setDarken(true);\r\n    setPassages(\r\n      passages.map((item) => {\r\n        if (item.id === passage.id) {\r\n          return {\r\n            ...item,\r\n            selected: false,\r\n            paletteSelected: false,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n  function deletePassage() {\r\n    setPassages(passages.filter((e) => e.id !== passage.id));\r\n  }\r\n\r\n  function paletteOpen() {\r\n    setPassages(\r\n      passages.map((item) => {\r\n        if (item.id === passage.id) {\r\n          return {\r\n            ...item,\r\n            paletteSelected: !item.paletteSelected,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n  function redSelect() {\r\n    setBgcolor(\"redify\");\r\n    setBgcolor2(\"red\");\r\n  }\r\n  function greenSelect() {\r\n    setBgcolor(\"greenify\");\r\n    setBgcolor2(\"greenyellow\");\r\n  }\r\n  function blueSelect() {\r\n    setBgcolor(\"bluify\");\r\n    setBgcolor2(\"cyan\");\r\n  }\r\n  function optionVisibility() {\r\n    setPassages(\r\n      passages.map((item) => {\r\n        if (item.id === passage.id) {\r\n          return {\r\n            ...item,\r\n            selected: true,\r\n          };\r\n        } else if (item.id !== passage.id) {\r\n          return {\r\n            ...item,\r\n            selected: false,\r\n            paletteSelected: false,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <PassageCore stateList={stateList} />\r\n      <Draggable>\r\n        <div className={`passage ${passage.selected ? \"top\" : \"\"}`}>\r\n          <div\r\n            className={`passage_index ${\r\n              passage.empty ? \"empty_mode\" : \"\"\r\n            } ${bgcolor}`}\r\n            onMouseDown={optionVisibility}\r\n            onDoubleClick={openPassage}\r\n          >\r\n            <h6 className=\"passage_text title\">{title.substring(0, 17)}</h6>\r\n            <h6 className=\"passage_text textile\">{textile}</h6>\r\n\r\n            <div\r\n              className={`line  ${passage.empty ? \"visible\" : \"\"}`}\r\n              style={{ border: `2px solid ${bgcolor2}` }}\r\n            >\r\n              <div className=\"line_inner\">\r\n                <div style={{ background: `${bgcolor2}` }}></div>\r\n                <div style={{ background: `${bgcolor2}` }}></div>\r\n                <div style={{ background: `${bgcolor2}` }}></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* OUTSIDE PASSAGE */}\r\n          <div className=\"options_container\">\r\n            <div className={`options ${passage.selected ? \"visible\" : \"\"}`}>\r\n              <button\r\n                onClick={deletePassage}\r\n                className=\"delete_btn\"\r\n                alt=\"delete\"\r\n              ></button>\r\n              <button\r\n                onClick={paletteOpen}\r\n                className=\"palette_btn\"\r\n                alt=\"palette\"\r\n              ></button>\r\n            </div>\r\n            <div\r\n              className={`palette ${passage.paletteSelected ? \"visible\" : \"\"}`}\r\n            >\r\n              <div\r\n                className=\"red_pale palette_choice\"\r\n                onClick={redSelect}\r\n              ></div>\r\n              <div\r\n                className=\"green_pale palette_choice\"\r\n                onClick={greenSelect}\r\n              ></div>\r\n              <div\r\n                className=\"blue_pale palette_choice\"\r\n                onClick={blueSelect}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Draggable>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Passage;\r\n","import React from \"react\";\r\nimport Passage from \"./Passage\";\r\nfunction Passages({\r\n  passages,\r\n  setPassages,\r\n  setHidden,\r\n  setDarken,\r\n  setCount,\r\n  fullscreen,\r\n  setFullscreen,\r\n}) {\r\n  return (\r\n    <div className=\"passage__container\">\r\n      <div className=\"passage__list\">\r\n        {passages.map((passage) => (\r\n          <Passage\r\n            key={passage.id}\r\n            passages={passages}\r\n            setPassages={setPassages}\r\n            setHidden={setHidden}\r\n            setDarken={setDarken}\r\n            passage={passage}\r\n            fullscreen={fullscreen}\r\n            setFullscreen={setFullscreen}\r\n            setCount={setCount}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Passages;\r\n","import React, { useState } from \"react\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport Passages from \"./components/Passages\";\n\nfunction App() {\n  const [passages, setPassages] = useState([]);\n  const [darken, setDarken] = useState(false);\n  const [count, setCount] = useState(0);\n  const [fullscreen, setFullscreen] = useState(false);\n\n  return (\n    <RemoveScroll>\n      <div className=\"App\">\n        <div className={darken ? \"darken\" : \"\"}></div>\n        <Form\n          passages={passages}\n          setPassages={setPassages}\n          count={count}\n          setCount={setCount}\n          fullscreen={fullscreen}\n        />\n        <Passages\n          passages={passages}\n          setPassages={setPassages}\n          setDarken={setDarken}\n          setCount={setCount}\n          fullscreen={fullscreen}\n          setFullscreen={setFullscreen}\n        />\n      </div>\n    </RemoveScroll>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}