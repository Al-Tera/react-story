{"version":3,"sources":["components/Form.js","components/Passage_Core.js","components/Passage.js","components/Passages.js","App.js","reportWebVitals.js","index.js"],"names":["Form","passages","setPassages","count","setCount","index","className","onClick","e","preventDefault","id","Math","random","empty","selected","Passage_Core","lister","hidden","onChange","setTitle","target","value","title","length","type","autoComplete","placeholder","console","log","setHidden","setDarken","textile","map","item","passage","setTextile","name","cols","rows","Passage","useState","onMouseDown","onDoubleClick","substring","filter","Passages","App","darken","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33c97655.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Form.css\";\r\nconst Form = ({ passages, setPassages, count, setCount }) => {\r\n  var index = count;\r\n  const createPassage = (e) => {\r\n    e.preventDefault();\r\n    setPassages([\r\n      ...passages,\r\n      { id: Math.random() * 1000, empty: false, index: index, selected: false },\r\n    ]);\r\n    setCount((count) => count + 1);\r\n  };\r\n  return (\r\n    <div className=\"App-header\">\r\n      <button onClick={createPassage} id=\"passage_button\">\r\n        <span>Create Section</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\n\nimport \"./Passage_Core.css\";\nfunction Passage_Core({ lister }) {\n  function fullscreen() {\n    console.log(\"Fullscreening\");\n  }\n  function propertyChange() {\n    if (lister.title === \"\" && lister.textile === \"\") {\n      lister.setPassages(\n        lister.passages.map((item) => {\n          if (item.id === lister.passage.id) {\n            return {\n              ...item,\n              empty: true,\n            };\n          }\n          return item;\n        })\n      );\n    } else {\n      lister.setPassages(\n        lister.passages.map((item) => {\n          if (item.id === lister.passage.id) {\n            return {\n              ...item,\n              empty: false,\n            };\n          }\n          return item;\n        })\n      );\n    }\n  }\n\n  function exit() {\n    lister.setHidden(true);\n    lister.setDarken(false);\n    propertyChange();\n  }\n  const titleHandler = (e) => {\n    lister.setTitle(e.target.value);\n    if (lister.title.length <= 16) {\n    } else {\n    }\n  };\n  const textareaHandler = (e) => {\n    lister.setTextile(e.target.value);\n    if (lister.textile.length <= 55) {\n    } else {\n    }\n  };\n  return (\n    <div className={`Core_Container ${lister.hidden ? \"hide\" : \"unhide\"}`}>\n      <div className=\"Core_Header\">\n        <input\n          onChange={titleHandler}\n          type=\"text\"\n          className=\"core_title\"\n          autoComplete=\"off\"\n          placeholder={lister.title}\n        />\n        <button className=\"coreButton Fullscreen\" onClick={fullscreen}></button>\n        <button className=\"coreButton Exit\" onClick={exit}></button>\n      </div>\n      <textarea\n        onChange={textareaHandler}\n        name=\"\"\n        className=\"core_textile\"\n        cols=\"30\"\n        rows=\"10\"\n        placeholder={lister.textile}\n      ></textarea>\n    </div>\n  );\n}\n\nexport default Passage_Core;\n","import React, { useState } from \"react\";\r\nimport \"./Passage.css\";\r\nimport \"./Passage_Core.css\";\r\nimport PassageCore from \"./Passage_Core\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nfunction Passage({ setDarken, passages, setPassages, passage }) {\r\n  const [hidden, setHidden] = useState(true);\r\n  const [title, setTitle] = useState(\"Untitled Section\");\r\n  const [textile, setTextile] = useState(\"Double click here edit this.\");\r\n\r\n  const lister = {\r\n    title,\r\n    setTitle,\r\n    textile,\r\n    setTextile,\r\n    passages,\r\n    setPassages,\r\n    hidden,\r\n    setHidden,\r\n    setDarken,\r\n    passage,\r\n  };\r\n  function openPassage() {\r\n    setHidden(false);\r\n    setDarken(true);\r\n  }\r\n  function deletePassage() {\r\n    setPassages(passages.filter((e) => e.id !== passage.id));\r\n  }\r\n\r\n  function optionVisibility() {\r\n    setPassages(\r\n      passages.map((item) => {\r\n        if (item.id === passage.id) {\r\n          return {\r\n            ...item,\r\n            selected: true,\r\n          };\r\n        } else if (item.id !== passage.id) {\r\n          return {\r\n            ...item,\r\n            selected: false,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <PassageCore lister={lister} />\r\n      <Draggable>\r\n        <div className=\"passage\">\r\n          <div\r\n            className={`passage_index ${passage.empty ? \"empty_mode\" : \"\"}`}\r\n            onMouseDown={optionVisibility}\r\n            onDoubleClick={openPassage}\r\n          >\r\n            <h6 className=\"passage_text title\">{title.substring(0, 17)}</h6>\r\n\r\n            <h6 className=\"passage_text textile\">{textile.substring(0, 57)}</h6>\r\n          </div>\r\n\r\n          <div className={`options ${passage.selected ? \"visible\" : \"\"}`}>\r\n            <button onClick={deletePassage} className=\"delbtn\"></button>\r\n          </div>\r\n        </div>\r\n      </Draggable>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Passage;\r\n","import React from \"react\";\r\nimport Passage from \"./Passage\";\r\nfunction Passages({ passages, setPassages, setHidden, setDarken, count }) {\r\n  return (\r\n    <div className=\"passage__container\">\r\n      <div className=\"passage__list\">\r\n        {passages.map((passage) => (\r\n          <Passage\r\n            key={passage.id}\r\n            passages={passages}\r\n            setPassages={setPassages}\r\n            setHidden={setHidden}\r\n            setDarken={setDarken}\r\n            count={count}\r\n            passage={passage}\r\n            index={passage.index}\r\n            selected={passage.selected}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Passages;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport Passages from \"./components/Passages\";\n// import PassageCore from \"./components/Passage_Core\";\nfunction App() {\n  const [passages, setPassages] = useState([]);\n  const [darken, setDarken] = useState(false);\n  const [count, setCount] = useState(0);\n\n  // const [hidden, setHidden] = useState(true);\n  return (\n    <div className=\"App\">\n      <div className={darken ? \"darken\" : \"\"}></div>\n      <Form\n        passages={passages}\n        setPassages={setPassages}\n        count={count}\n        setCount={setCount}\n      />\n      <Passages\n        passages={passages}\n        setPassages={setPassages}\n        setDarken={setDarken}\n        count={count}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}